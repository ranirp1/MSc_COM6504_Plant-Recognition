<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>New Plant Sightings</title>
    <link rel="icon" href="images/logo.png" type="image/x-icon"/>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
    <!-- Link to external CSS file -->
    <link href="/stylesheets/style.css" rel="stylesheet">
</head>
<body class="gradient-background ">
<%- include('navbar.ejs') %>
<div class="container shadow mt-4">
    <h1>New Plant Sightings</h1>
    <div class="row">
        <div class="col-md-6">
            <form id="plantForm" action="/savePlant" method="POST" enctype="multipart/form-data">
                <div class="mb-3">
                    <label for="userName" class="form-label"></label>
                    <input type="text" class="form-control" id="userName" name="userName" placeholder="Enter User Name" required >
                </div>
                <div class="mb-3">
                    <label for="plantName" class="form-label"><b>Plant Name</b></label>
                    <input type="text" class="form-control" id="plantName" name="plantName" placeholder="Enter Plant Name" required >
                </div>
                <div class="mb-3">
                    <label for="dateTime" class="form-label"><b>Date/Time</b></label>
                    <input type="datetime-local" class="form-control"  name="dateTime" id="dateTime" onchange="updateDate()" required>
                </div>
                <div class="mb-3">
                    <label for="description" class="form-label"><b>Description</b></label>
                    <textarea class="form-control" id="description" name="description" rows="3" required></textarea>
                </div>
                <div class="mb-3">
                    <label for="location" class="form-label"><b>Location</b></label>
                    <input type="hidden" class="form-control" id="location" name="location" placeholder="Enter Location" required>
                </div>
                <div class="mb-3">
                    <input type="checkbox" name="currentLocationCheckbox" id="currentLocationCheckbox">
                    <label for="currentLocationCheckbox" >Are you on your current location?</label><br>
                </div>
                <div class="mb-3">
                    <label for="plantHeight" class="form-label"><b>Plant Height</b></label>

                    <input type="text" class="form-control" id="plantHeight" name="plantHeight" placeholder="Enter Height in Meters" required ><br>

                    <input type="text" class="form-control" id="plantWidth" name="plantWidth" placeholder="Enter width in Meters " required >

                            <!-- Hidden input to hold the concatenated value -->
                            <input type="hidden" id="plantSize" name="plantSize" required>
                        </div>
                        <div class="mb-3">
                            <label for="plantCharacteristic" class="form-label">Plant Characteristic</label>
                            <div class="mb-3">
                                <label class="form-check-label"><b>Select Plant Type:</b></label><br>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="plantType" id="withFlower"
                                        value="withFlower" checked>
                                    <label class="form-check-label" for="withFlower">With Flower</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="plantType" id="withoutFlower"
                                        value="withoutFlower">
                                    <label class="form-check-label" for="withoutFlower">Without Flower</label>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label class="form-check-label"><b>Select Fruit Type:</b></label><br>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="fruitType" id="withFruitSeed"
                                        value="withFruitSeed" checked>
                                    <label class="form-check-label" for="withFruitSeed">With Fruit / Seed</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="fruitType" id="withoutFruitSeed"
                                        value="withoutFruitSeed">
                                    <label class="form-check-label" for="withoutFruitSeed">Without Fruit / Seed</label>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label class="form-check-label"><b>Select Leaves Type:</b></label><br>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="leavesType" id="withLeaves"
                                        value="withLeaves" checked>
                                    <label class="form-check-label" for="withLeaves">With Leaves</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="leavesType" id="withoutLeaves"
                                        value="withoutLeaves">
                                    <label class="form-check-label" for="withoutLeaves">Without Leaves</label>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label class="form-check-label"><b>Select Sun Exposure Type:</b></label><br>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="sunExposureType" id="fullSun"
                                        value="fullSun" checked>
                                    <label class="form-check-label" for="fullSun">Full Sun</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="sunExposureType"
                                        id="partialShade" value="partialShade">
                                    <label class="form-check-label" for="partialShade">Partial Shade</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="sunExposureType" id="fullShade"
                                        value="fullShade">
                                    <label class="form-check-label" for="fullShade">Full Shade</label>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="plantColor" class="form-label"><b>Plant Color</b></label>
                                <input type="color" class="form-control" name="plantColor" id="plantColor">
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="imageUpload" class="form-label"><b>Upload Image</b></label>
                            <input type="file" class="form-control" id="imageUpload" name="imageUpload"
                                onchange="previewImage(event)" required>
                        </div>
                        <button type="submit" class="btn btn-primary">Submit</button>
                    </form>
                </div>
                <div class="col-md-6">

                    <div class="col-md-6 shadow">
                        <div id="map"></div>
                    </div>

                    <div class="card shadow" id="imagePreviewCard">
                        <div class="card-header">
                            Preview Image
                        </div>
                        <div class="card-body">
                            <img id="imagePreview" src="#" alt="Image Preview" class="w-100">
                        </div>
                    </div>
                </div>

                <div class="modal fade" id="alertModal" tabindex="-1" aria-labelledby="alertModalLabel"
                    aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="alertModalLabel">Success!</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"
                                    aria-label="Close"></button>
                            </div>
                            <div class="modal-body" id="alertsContainer"></div>
                        </div>
                    </div>
                </div>
                <div id="plantData"></div>
            </div>

        </div>
        <script>

            document.getElementById('plantForm').addEventListener('submit', function (event) {
                // Prevent the default form submission
                event.preventDefault();

                // Get the height and width values
                var height = document.getElementById('plantHeight').value;
                var width = document.getElementById('plantWidth').value;

                // Concatenate the height and width with a separator (e.g., x)
                var plantSize = height + ' x ' + width;

                // Set the concatenated value in the hidden input field
                document.getElementById('plantSize').value = plantSize;

                // Submit the form
                this.submit();
            });

    function updateDate() {
        // Get the current date and time in UTC
        let now = new Date();

        // Convert to UK time zone offset
        let ukOffset = now.getTimezoneOffset() * 60000; // getTimezoneOffset() returns offset in minutes
        let ukTime = new Date(now.getTime() - ukOffset); // Adjust time by offset

        // Format the UK date and time for datetime-local input
        let formattedUKTime = ukTime.toISOString().slice(0, 16);

        // Update the max attribute of the datetime-local input
        document.getElementById('dateTime').setAttribute('max', formattedUKTime);
    }

    window.onload = updateDate;

    document.getElementById('plantColor').addEventListener('change', function() {
        var selectedColor = this.value;
    });

        function previewImage(event) {
        var reader = new FileReader();
        reader.onload = function () {
            var output = document.getElementById('imagePreview');
            output.src = reader.result;
            // Show the card when image previewed
            document.getElementById('imagePreviewCard').classList.add('show');
        }
        reader.readAsDataURL(event.target.files[0]);
    }

    function initMap() {
        var map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: 53.3811, lng: -1.4701 },
            zoom: 8
        });

        var marker = new google.maps.Marker({
            position: { lat: 53.3811, lng: -1.4701 },
            map: map,
            draggable: true // Allow the marker to be dragged initially
        });

        // Variable to store coordinates
        var coordinates = "";

        // Function to get the current location
        function getCurrentLocation() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    coordinates = position.coords.latitude + ", " + position.coords.longitude;
                    marker.setPosition({ lat: position.coords.latitude, lng: position.coords.longitude });
                    document.getElementById("location").value = coordinates;
                });
            } else {
                alert("Geolocation is not supported by this browser.");
            }
        }

        google.maps.event.addListener(marker, 'dragend', function (event) {
            coordinates = event.latLng.lat() + ", " + event.latLng.lng(); // Update the coordinates variable
            document.getElementById("location").value = coordinates;
        });

        // Check if the checkbox is checked
        var currentLocationCheckbox = document.getElementById('currentLocationCheckbox');
        currentLocationCheckbox.addEventListener('change', function () {
            if (this.checked) {
                getCurrentLocation();
                // Disable marker dragging
                marker.setDraggable(false);
            } else {
                // Enable marker dragging
                marker.setDraggable(true);
            }
        });

                // Call getCurrentLocation initially
                getCurrentLocation();
            }
        </script>

        <script>
            document.addEventListener("DOMContentLoaded", function () {
                // IndexedDB setup
                let db;
                const requestIDB = indexedDB.open("plant-recognition", 1);

                requestIDB.onupgradeneeded = function (event) {
                    db = event.target.result;
                    if (!db.objectStoreNames.contains("plants")) {
                        db.createObjectStore("plants", { keyPath: "id", autoIncrement: true });
                    }
                };

                requestIDB.onsuccess = function (event) {
                    db = event.target.result;
                };

                requestIDB.onerror = function (event) {
                    console.error("IndexedDB error:", event.target.error);
                };

                // Handle form submission
                const plantForm = document.getElementById("plantForm");
                plantForm.addEventListener("submit", function (event) {
                    event.preventDefault(); // Prevent the default form submission

                    // Gather form data
                    const formData = new FormData(plantForm);
                    const plantData = {
                        userName: formData.get("userName"),
                        plantName: formData.get("plantName"),
                        dateTime: formData.get("dateTime"),
                        description: formData.get("description"),
                        location: formData.get("location"),
                        plantSize: formData.get("plantSize"),
                        plantType: formData.get("plantType"),
                        fruitType: formData.get("fruitType"),
                        leavesType: formData.get("leavesType"),
                        sunExposureType: formData.get("sunExposureType"),
                        plantColor: formData.get("plantColor"),
                        imageUpload: formData.get("imageUpload").name // Save the file name, handle file separately
                    };

                    // Save to IndexedDB
                    const transaction = db.transaction(["plants"], "readwrite");
                    const plantStore = transaction.objectStore("plants");
                    const request = plantStore.add(plantData);

                    request.onsuccess = function () {
                        //  console.log("Plant data saved successfully");
                       // alert("Plant data saved successfully! You can check it in IndexedDB");
                    };

                    request.onerror = function (event) {
                        console.error("Error saving plant data:", event.target.error);
                    };
                });
            });
        </script>


        <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCuqPAkMS8XSE0XCU2iFpA-M_znQ-rmSFg&callback=initMap">
    </script>
<!-- Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4" crossorigin="anonymous"></script>


</body>

</html>
